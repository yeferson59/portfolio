---
import SectionHeader from "@/components/layouts/SectionHeader.astro";
import SkillCard from "@/components/layouts/SkillCard.astro";
import Button from "@/components/ui/Button.astro";
import { skills } from "@/data/site";
import { getArrowRightIcon } from "@/utils/icons";

// Percentages tuned based on your GitHub activity (repos in TS/Node, Go, Python, Rust, infra)
const levelMap: Record<string, number> = {
  // Expert core stack
  "Node.js": 95,
  TypeScript: 95,
  "Express.js": 92,
  PostgreSQL: 90,
  Docker: 90,
  "JWT Authentication": 92,
  "RESTful APIs": 92,
  JavaScript: 90,
  Git: 85,

  // Proficient ecosystem
  Golang: 80,
  Fiber: 75,
  Gin: 72,
  Redis: 80,
  Microservices: 82,
  "Better-Auth": 70,
  "Drizzle ORM": 76,
  "Docker Swarm": 72,
  WebSocket: 75,
  gRPC: 72,
  "Bun.js": 68,
  NestJS: 72,
  Python: 68,
  Rust: 62,
  "Next.js": 72,
  Astro: 70,
  TailwindCSS: 72,
  Makefile: 65,

  // Familiar & tools
  "C#": 55,
  Java: 58,
  "GitHub Actions": 62,
  "Swagger/OpenAPI": 62,
  "Jest Testing": 58,
  ESLint: 62,
  "NPM Publishing": 58,
  Prettier: 62,
  Husky: 62,
  Commitlint: 62,
  Django: 58,
  PLpgSQL: 68,
  "Shell Scripting": 68,
  WordPress: 55,
  "Machine Learning": 55,
  "AI/Gemini API": 65,
};

const toItems = (names: readonly string[]) =>
  names.map((name) => {
    const level = levelMap[name] ?? 60;
    const variant = level >= 85 ? ("primary" as const) : ("secondary" as const);
    return { name, level, variant } as const;
  });

// Build categories with improved titles/icons
const skillCategories = [
  {
    title: "Expert • Core Stack",
    icon: `<svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7"/></svg>`,
    iconVariant: "primary" as const,
    skills: toItems(skills.expert),
  },
  {
    title: "Proficient • Ecosystem",
    icon: `<svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>`,
    iconVariant: "secondary" as const,
    skills: toItems(skills.proficient),
  },
  {
    title: "Familiar • Tools & Platforms",
    icon: `<svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/></svg>`,
    iconVariant: "primary" as const,
    skills: toItems(skills.familiar),
  },
];
---

<section id="skills">
  <div class="container">
    <SectionHeader
      title="Technical Skills"
      subtitle="Technologies and tools used to perform a specific task or job. They are often acquired through education, training, or experience"
    />

    <div class="skills-grid mb-4xl">
      {
        skillCategories.map((category) => (
          <SkillCard
            title={category.title}
            icon={category.icon}
            skills={category.skills}
            iconVariant={category.iconVariant}
          />
        ))
      }
    </div>

    <div class="mt-4xl text-center">
      <Button size="lg" href="#projects">
        View Projects
        <span set:html={getArrowRightIcon(20, 20)} />
      </Button>
    </div>
  </div>
</section>
