---
/**
 * Metrics Panel Component
 * Displays performance metrics for API requests
 */

interface Props {
  duration?: number;
  size?: number;
  cached?: boolean;
  timestamp?: string;
  className?: string;
}

const { duration, size, cached, timestamp, className = "" } = Astro.props;

function formatDuration(ms?: number): string {
  if (!ms && ms !== 0) return "--";
  if (ms < 1000) return `${Math.round(ms)}ms`;
  return `${(ms / 1000).toFixed(2)}s`;
}

function formatSize(bytes?: number): string {
  if (!bytes && bytes !== 0) return "--";
  if (bytes === 0) return "0 B";

  const units = ["B", "KB", "MB", "GB"];
  const i = Math.floor(Math.log(bytes) / Math.log(1024));
  const size = bytes / Math.pow(1024, i);

  return `${size.toFixed(2)} ${units[i]}`;
}

function formatTimestamp(ts?: string): string {
  if (!ts) return "--";
  const date = new Date(ts);
  return date.toLocaleTimeString();
}

function getDurationColor(ms?: number): string {
  if (!ms) return "gray";
  if (ms < 100) return "green";
  if (ms < 500) return "blue";
  if (ms < 1000) return "orange";
  return "red";
}
---

<div class={`metrics-panel ${className}`}>
  <div class="metrics-grid">
    <div class={`metric-item metric-${getDurationColor(duration)}`}>
      <div class="metric-icon">‚ö°</div>
      <div class="metric-content">
        <div class="metric-label">Duration</div>
        <div class="metric-value">{formatDuration(duration)}</div>
      </div>
    </div>

    <div class="metric-item">
      <div class="metric-icon">üì¶</div>
      <div class="metric-content">
        <div class="metric-label">Size</div>
        <div class="metric-value">{formatSize(size)}</div>
      </div>
    </div>

    <div class="metric-item">
      <div class="metric-icon">üïê</div>
      <div class="metric-content">
        <div class="metric-label">Time</div>
        <div class="metric-value">{formatTimestamp(timestamp)}</div>
      </div>
    </div>

    {
      cached && (
        <div class="metric-item metric-cached">
          <div class="metric-icon">üíæ</div>
          <div class="metric-content">
            <div class="metric-label">Cache</div>
            <div class="metric-value">HIT</div>
          </div>
        </div>
      )
    }
  </div>
</div>

<style>
  .metrics-panel {
    padding: 1rem;
    background: var(--color-bg-secondary);
    border-radius: 0.5rem;
    border: 1px solid var(--color-border);
  }

  .metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
  }

  .metric-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: var(--color-bg-tertiary);
    border-radius: 0.375rem;
    border: 1px solid var(--color-border);
    transition: all 0.2s;
  }

  .metric-item:hover {
    border-color: var(--color-primary);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .metric-icon {
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .metric-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.125rem;
  }

  .metric-label {
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .metric-value {
    font-size: 1.125rem;
    font-weight: 600;
    font-family: "Monaco", "Menlo", monospace;
    color: var(--color-text-primary);
  }

  /* Performance-based colors */
  .metric-green .metric-value {
    color: rgb(22, 163, 74);
  }

  .metric-blue .metric-value {
    color: rgb(37, 99, 235);
  }

  .metric-orange .metric-value {
    color: rgb(234, 88, 12);
  }

  .metric-red .metric-value {
    color: rgb(220, 38, 38);
  }

  .metric-gray .metric-value {
    color: rgb(107, 114, 128);
  }

  .metric-cached {
    background: rgba(34, 197, 94, 0.1);
    border-color: rgba(34, 197, 94, 0.3);
  }

  .metric-cached .metric-value {
    color: rgb(22, 163, 74);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .metrics-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .metric-item {
      padding: 0.5rem;
    }

    .metric-icon {
      font-size: 1.25rem;
    }

    .metric-value {
      font-size: 1rem;
    }
  }
</style>
