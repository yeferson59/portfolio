---
import { mobileNavigationItems, icons } from "@/data/site";

interface Props {
  isOpen?: boolean;
  class?: string;
}

const { isOpen = false, class: className = "" } = Astro.props;
---

<div
  class={`mobile-menu ${isOpen ? "open" : ""} ${className}`}
  id="mobile-menu"
>
  <nav class="mobile-menu__nav">
    {
      mobileNavigationItems.map((item) => (
        <a href={item.href} aria-label={item.label} class="mobile-menu__link">
          <div class="accent-dot" />
          <span set:html={icons[item.icon as keyof typeof icons]} />
          {item.label}
        </a>
      ))
    }
  </nav>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const mobileMenu = document.getElementById("mobile-menu") as HTMLElement;
    const mobileMenuButton = document.querySelector(
      ".mobile-menu-button",
    ) as HTMLElement;
    const mobileMenuLinks = document.querySelectorAll(".mobile-menu__link");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", function () {
        mobileMenu.classList.toggle("open");
        mobileMenuButton.setAttribute(
          "aria-expanded",
          mobileMenu.classList.contains("open").toString(),
        );
      });

      // Close menu when clicking on links
      mobileMenuLinks.forEach((link) => {
        link.addEventListener("click", () => {
          setTimeout(() => {
            mobileMenu.classList.remove("open");
            mobileMenuButton.setAttribute("aria-expanded", "false");
          }, 150);
        });
      });

      // Close menu when clicking outside
      document.addEventListener("click", function (event) {
        if (
          !mobileMenuButton.contains(event.target as Node) &&
          !mobileMenu.contains(event.target as Node)
        ) {
          mobileMenu.classList.remove("open");
          mobileMenuButton.setAttribute("aria-expanded", "false");
        }
      });

      // Close menu on escape key
      document.addEventListener("keydown", function (event) {
        if (event.key === "Escape" && mobileMenu.classList.contains("open")) {
          mobileMenu.classList.remove("open");
          mobileMenuButton.setAttribute("aria-expanded", "false");
        }
      });
    }
  });
</script>
